// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto

#include "msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace bovo_message {
class BovoMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BovoMessage> _instance;
} _BovoMessage_default_instance_;
}  // namespace bovo_message
static void InitDefaultsBovoMessage_msg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bovo_message::_BovoMessage_default_instance_;
    new (ptr) ::bovo_message::BovoMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bovo_message::BovoMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BovoMessage_msg_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBovoMessage_msg_2eproto}, {}};

void InitDefaults_msg_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_BovoMessage_msg_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_msg_2eproto[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_msg_2eproto[2];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_msg_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_msg_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::bovo_message::BovoMessage, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::bovo_message::BovoMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bovo_message::BovoMessage, magic_),
  PROTOBUF_FIELD_OFFSET(::bovo_message::BovoMessage, cmd_),
  PROTOBUF_FIELD_OFFSET(::bovo_message::BovoMessage, status_),
  PROTOBUF_FIELD_OFFSET(::bovo_message::BovoMessage, name_),
  PROTOBUF_FIELD_OFFSET(::bovo_message::BovoMessage, address_),
  PROTOBUF_FIELD_OFFSET(::bovo_message::BovoMessage, markstyle_),
  PROTOBUF_FIELD_OFFSET(::bovo_message::BovoMessage, x_),
  PROTOBUF_FIELD_OFFSET(::bovo_message::BovoMessage, y_),
  2,
  3,
  4,
  0,
  1,
  5,
  6,
  7,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(::bovo_message::BovoMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::bovo_message::_BovoMessage_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_msg_2eproto = {
  {}, AddDescriptors_msg_2eproto, "msg.proto", schemas,
  file_default_instances, TableStruct_msg_2eproto::offsets,
  file_level_metadata_msg_2eproto, 1, file_level_enum_descriptors_msg_2eproto, file_level_service_descriptors_msg_2eproto,
};

const char descriptor_table_protodef_msg_2eproto[] =
  "\n\tmsg.proto\022\014bovo_message\"\310\002\n\013BovoMessag"
  "e\022\r\n\005magic\030\001 \001(\r\022.\n\003cmd\030\002 \002(\0162!.bovo_mes"
  "sage.BovoMessage.CmdType\0224\n\006status\030\003 \001(\016"
  "2$.bovo_message.BovoMessage.StatusType\022\014"
  "\n\004name\030\004 \001(\014\022\017\n\007address\030\005 \001(\014\022\021\n\tmarksty"
  "le\030\006 \001(\r\022\t\n\001x\030\007 \001(\r\022\t\n\001y\030\010 \001(\r\"F\n\007CmdTyp"
  "e\022\010\n\004NONE\020\000\022\010\n\004JOIN\020\001\022\t\n\005STYLE\020\002\022\007\n\003PUT\020"
  "\003\022\010\n\004QUIT\020\004\022\t\n\005TOKEN\020\005\"4\n\nStatusType\022\010\n\004"
  "OKAY\020\000\022\t\n\005ERROR\020\001\022\007\n\003WON\020\002\022\010\n\004LOST\020\003"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_msg_2eproto = {
  false, InitDefaults_msg_2eproto, 
  descriptor_table_protodef_msg_2eproto,
  "msg.proto", &assign_descriptors_table_msg_2eproto, 356,
};

void AddDescriptors_msg_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_msg_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_msg_2eproto = []() { AddDescriptors_msg_2eproto(); return true; }();
namespace bovo_message {
const ::google::protobuf::EnumDescriptor* BovoMessage_CmdType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_msg_2eproto);
  return file_level_enum_descriptors_msg_2eproto[0];
}
bool BovoMessage_CmdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BovoMessage_CmdType BovoMessage::NONE;
const BovoMessage_CmdType BovoMessage::JOIN;
const BovoMessage_CmdType BovoMessage::STYLE;
const BovoMessage_CmdType BovoMessage::PUT;
const BovoMessage_CmdType BovoMessage::QUIT;
const BovoMessage_CmdType BovoMessage::TOKEN;
const BovoMessage_CmdType BovoMessage::CmdType_MIN;
const BovoMessage_CmdType BovoMessage::CmdType_MAX;
const int BovoMessage::CmdType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BovoMessage_StatusType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_msg_2eproto);
  return file_level_enum_descriptors_msg_2eproto[1];
}
bool BovoMessage_StatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BovoMessage_StatusType BovoMessage::OKAY;
const BovoMessage_StatusType BovoMessage::ERROR;
const BovoMessage_StatusType BovoMessage::WON;
const BovoMessage_StatusType BovoMessage::LOST;
const BovoMessage_StatusType BovoMessage::StatusType_MIN;
const BovoMessage_StatusType BovoMessage::StatusType_MAX;
const int BovoMessage::StatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void BovoMessage::InitAsDefaultInstance() {
}
class BovoMessage::HasBitSetters {
 public:
  static void set_has_magic(BovoMessage* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_cmd(BovoMessage* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_status(BovoMessage* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_name(BovoMessage* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_address(BovoMessage* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_markstyle(BovoMessage* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_x(BovoMessage* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_y(BovoMessage* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BovoMessage::kMagicFieldNumber;
const int BovoMessage::kCmdFieldNumber;
const int BovoMessage::kStatusFieldNumber;
const int BovoMessage::kNameFieldNumber;
const int BovoMessage::kAddressFieldNumber;
const int BovoMessage::kMarkstyleFieldNumber;
const int BovoMessage::kXFieldNumber;
const int BovoMessage::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BovoMessage::BovoMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bovo_message.BovoMessage)
}
BovoMessage::BovoMessage(const BovoMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address()) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  ::memcpy(&magic_, &from.magic_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&magic_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:bovo_message.BovoMessage)
}

void BovoMessage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_BovoMessage_msg_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&magic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&magic_)) + sizeof(y_));
}

BovoMessage::~BovoMessage() {
  // @@protoc_insertion_point(destructor:bovo_message.BovoMessage)
  SharedDtor();
}

void BovoMessage::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BovoMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BovoMessage& BovoMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BovoMessage_msg_2eproto.base);
  return *internal_default_instance();
}


void BovoMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:bovo_message.BovoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      address_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&magic_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&magic_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BovoMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BovoMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 magic = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_magic(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required .bovo_message.BovoMessage.CmdType cmd = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::bovo_message::BovoMessage_CmdType_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(2, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_cmd(static_cast<::bovo_message::BovoMessage_CmdType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .bovo_message.BovoMessage.StatusType status = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::bovo_message::BovoMessage_StatusType_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(3, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_status(static_cast<::bovo_message::BovoMessage_StatusType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes name = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes address = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 markstyle = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_markstyle(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 x = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_x(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 y = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_y(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BovoMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bovo_message.BovoMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 magic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_magic(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &magic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .bovo_message.BovoMessage.CmdType cmd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::bovo_message::BovoMessage_CmdType_IsValid(value)) {
            set_cmd(static_cast< ::bovo_message::BovoMessage_CmdType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .bovo_message.BovoMessage.StatusType status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::bovo_message::BovoMessage_StatusType_IsValid(value)) {
            set_status(static_cast< ::bovo_message::BovoMessage_StatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes address = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 markstyle = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_markstyle(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &markstyle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 x = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_x(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 y = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_y(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bovo_message.BovoMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bovo_message.BovoMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BovoMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bovo_message.BovoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 magic = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->magic(), output);
  }

  // required .bovo_message.BovoMessage.CmdType cmd = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->cmd(), output);
  }

  // optional .bovo_message.BovoMessage.StatusType status = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->status(), output);
  }

  // optional bytes name = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->name(), output);
  }

  // optional bytes address = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->address(), output);
  }

  // optional uint32 markstyle = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->markstyle(), output);
  }

  // optional uint32 x = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->x(), output);
  }

  // optional uint32 y = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bovo_message.BovoMessage)
}

::google::protobuf::uint8* BovoMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bovo_message.BovoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 magic = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->magic(), target);
  }

  // required .bovo_message.BovoMessage.CmdType cmd = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->cmd(), target);
  }

  // optional .bovo_message.BovoMessage.StatusType status = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->status(), target);
  }

  // optional bytes name = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->name(), target);
  }

  // optional bytes address = 5;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->address(), target);
  }

  // optional uint32 markstyle = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->markstyle(), target);
  }

  // optional uint32 x = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->x(), target);
  }

  // optional uint32 y = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bovo_message.BovoMessage)
  return target;
}

size_t BovoMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bovo_message.BovoMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .bovo_message.BovoMessage.CmdType cmd = 2;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes name = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
    }

    // optional bytes address = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->address());
    }

    // optional uint32 magic = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->magic());
    }

  }
  if (cached_has_bits & 0x000000f0u) {
    // optional .bovo_message.BovoMessage.StatusType status = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional uint32 markstyle = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->markstyle());
    }

    // optional uint32 x = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x());
    }

    // optional uint32 y = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->y());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BovoMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bovo_message.BovoMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BovoMessage* source =
      ::google::protobuf::DynamicCastToGenerated<BovoMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bovo_message.BovoMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bovo_message.BovoMessage)
    MergeFrom(*source);
  }
}

void BovoMessage::MergeFrom(const BovoMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bovo_message.BovoMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
    }
    if (cached_has_bits & 0x00000004u) {
      magic_ = from.magic_;
    }
    if (cached_has_bits & 0x00000008u) {
      cmd_ = from.cmd_;
    }
    if (cached_has_bits & 0x00000010u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000020u) {
      markstyle_ = from.markstyle_;
    }
    if (cached_has_bits & 0x00000040u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000080u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BovoMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bovo_message.BovoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BovoMessage::CopyFrom(const BovoMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bovo_message.BovoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BovoMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  return true;
}

void BovoMessage::Swap(BovoMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BovoMessage::InternalSwap(BovoMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(magic_, other->magic_);
  swap(cmd_, other->cmd_);
  swap(status_, other->status_);
  swap(markstyle_, other->markstyle_);
  swap(x_, other->x_);
  swap(y_, other->y_);
}

::google::protobuf::Metadata BovoMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_msg_2eproto);
  return ::file_level_metadata_msg_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bovo_message
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::bovo_message::BovoMessage* Arena::CreateMaybeMessage< ::bovo_message::BovoMessage >(Arena* arena) {
  return Arena::CreateInternal< ::bovo_message::BovoMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
